# View specific population data from the World Bank's World Development Indicators dataset
# Written by Artin Gill
# Coded in Python 3.6.0
# Uses pandas and matplotlib.pyplot packages
# Access dataset from https://www.kaggle.com/worldbank/world-development-indicators to plug into function

"""
This script uses the function plot_pop to parse through the World Bank dataset file and an inputted country, and 
plot that country's change in Total Urban Population over every recorded year.
"""

# Importing packages
import pandas as pd
import matplotlib.pyplot as plt

# Define plot_pop()
def plot_pop(filename, country_code):

    # Initialize reader object: urb_pop_reader
    urb_pop_reader = pd.read_csv(filename, chunksize=1000)

    # Initialize empty DataFrame: data
    data = pd.DataFrame()
    
    # Iterate over each DataFrame chunk
    for df_urb_pop in urb_pop_reader:
        # Check out specific country: df_pop_ceb
        df_pop_ceb = df_urb_pop[df_urb_pop['CountryCode'] == country_code]

        # Zip DataFrame columns of interest: pops
        pops = zip(df_pop_ceb['Total Population'],
                    df_pop_ceb['Urban population (% of total)'])

        # Turn zip object into list: pops_list
        pops_list = list(pops)

        # Use list comprehension to create new DataFrame column 'Total Urban Population'
        df_pop_ceb['Total Urban Population'] = [int(tup[0] * tup[1]) for tup in pops_list]
    
        # Append DataFrame chunk to data: data
        data = data.append(df_pop_ceb)

    # Plot urban population data
    data.plot(kind='scatter', x='Year', y='Total Urban Population')
    plt.show()

# Set the filename: fn
# Adjust filename accordingly
fn = '####'

# Example: call plot_pop for country code 'CEB', ie. Central Europe and the Baltics
plot_pop(fn, 'CEB')

# Example: call plot_pop for country code 'ARB', ie. Arab World
plot_pop(fn, 'ARB')
