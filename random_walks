# Simulating random walks example
# written by Artin Gill
# coded in Python 3.6.0
# uses matplotlib and numpy packages
# see description for scenario and details

import matplotlib.pyplot as plt
import numpy as np
np.random.seed(69)
all_walks = []

# Simulate random walk 500 times
for i in range(500) :
    random_walk = [0]
    for x in range(100) :
        step = random_walk[-1]
        dice = np.random.randint(1,7)
        if dice <= 2:
            step = max(0, step - 1)
        elif dice <= 5:
            step = step + 1
        else:
            step = step + np.random.randint(1,7)
        if np.random.rand() <= 0.001 :
            step = 0
        random_walk.append(step)
    all_walks.append(random_walk)

# Plotting the walks
np_aw_t = np.transpose(np.array(all_walks))
plt.plot(np_aw_t)
plt.xlabel("# of Rolls")
plt.ylabel("Step #")
plt.title("500 Simulations of Random Walk")
plt.show()

# Clear
plt.clf()

# Plot the distribution of results
ends = np_aw_t[-1]
plt.hist(ends)
plt.xlabel("Final Step #")
plt.ylabel("# of Simulations")
plt.title("Distribution of 500 Simulations of Random Walk")
plt.show()

# Calculate the probability of reaching at least step 60 by the end of 100 rolls through 500 simulations, rounded to 2 decimal places
ends_prob = [i for i in ends if i >= 60]
print("The probability that you end up on step 60 or higher after 100 rolls is " + str(round(((len(ends_prob)/500)*100),2)) + "%.")
